<!--
	To use config file, pass the argument to CFLint (e.g. "CFLint -configFile='C:\CFLint\config.xml'")
-->

<config>
	<output>
		<!--
			path: path where files should be generated.
			xml: xml output should be generated (used by CFLint-plugin).
			html: html output should be generated.
			txt: text output should be generated.
		-->
		<path>.</path>
		<xml>true</xml>
		<html>true</html>
		<txt>false</txt>
	</output>
	<violations>
		<!--
			name: name of the checker to be used for violations.
				CFGenericTagChecker : Checks for set cf tags that shouldn't be used.
					Options Available:
						-tagName: cf tag that should be checked.
						-severity: severity of the violation.
						-messageCode: code displayed.
						-message: message recieved when violation is found.
				CFNestedControlStatementChecker : Checks to depth of control statements inside cfm files.
					Options Available:
						-severity: severity of the violation.
						-messageCode: code displayed.
						-message: message recieved when violation is found.
						-nestedDepth: Maximum depth allowed .
				CFSwitchDefaultChecker : Checks that all switch statements have a default defined.
					Options Available:
						-severity: severity of the violation.
						-messageCode: code displayed.
						-message: message recieved when violation is found.
				FunctionLengthChecker :
					Options Available:
						-severity: severity of the violation.
						-messageCode: code displayed.
						-message: message recieved when violation is found.
						-length: Maximum statements allowed.

			severity: severity of the violation.
				Options Available (Low to High): Cosmetic, Info, Warning, Major, Severe, Critical, Fatal.

			messageCode: short message displayed when violation is found. Recommended: Use a constant structure (e.g. "FUNCTION_LENGTH_EXCEEDED").

			message: full message displayed when violation is found. 
				Recommended: explain why it's a violation and offer alternative (e.g. "Functions over 50 lines of code make it difficult to understand and debug. Consider separating the function into separate functions or (recommended) classes.")
		-->
		<violation>
			<name>FunctionLengthChecker</name>
			<severity>Major</severity>
			<messageCode>FUNCTION_LENGTH_EXCEEDED</messageCode>
			<message>
				Functions over 50 lines of code make it difficult to understand and debug. Consider separating the function into separate functions or (recommended) classes.
			</message>
			<length>50</length>
		</violation>
		<violation>
			<name>CFGenericTagChecker</name>
			<tagName>cfinsert</tagName>
			<severity>Warning</severity>
			<messageCode>AVOID_USING_CFINSERT_TAG</messageCode>
			<message>There are refresh, performance, and maintenance issues with the "<cfinsert>" tag.</message>
		</violation>
		<violation>
			<name>CFGenericTagChecker</name>
			<tagName>cfcomponent</tagName>
			<severity>Info</severity>
			<messageCode>AVOID_USING_CFCOMPONENT</messageCode>
			<message>"<cfcomponent>" is becoming deprecated. It is recommended to use CFScript inside a separate .cfc file</message>
		</violation>
		<violation>
			<ignore>true</ignore>
		</violation>
	</violations>
</config>
